

package com.bandlab.metro.station.runners;

import com.intellij.testFramework.TestDataPath;
import org.jetbrains.kotlin.test.util.KtTestUtil;
import org.jetbrains.kotlin.test.TargetBackend;
import org.jetbrains.kotlin.test.TestMetadata;
import org.junit.jupiter.api.Nested;
import org.junit.jupiter.api.Test;

import java.io.File;
import java.util.regex.Pattern;

/** This class is generated by {@link com.bandlab.metro.station.GenerateTestsKt}. DO NOT MODIFY MANUALLY */
@SuppressWarnings("all")
@TestMetadata("compiler-plugin/testData/diagnostics")
@TestDataPath("$PROJECT_ROOT")
public class JvmDiagnosticTestGenerated extends AbstractJvmDiagnosticTest {
  @Test
  public void testAllFilesPresentInDiagnostics() {
    KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler-plugin/testData/diagnostics"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
  }

  @Nested
  @TestMetadata("compiler-plugin/testData/diagnostics/metrostation")
  @TestDataPath("$PROJECT_ROOT")
  public class Metrostation {
    @Test
    public void testAllFilesPresentInMetrostation() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler-plugin/testData/diagnostics/metrostation"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
    }

    @Test
    @TestMetadata("OnlyClassIsAllowed.kt")
    public void testOnlyClassIsAllowed() {
      runTest("compiler-plugin/testData/diagnostics/metrostation/OnlyClassIsAllowed.kt");
    }
  }

  @Nested
  @TestMetadata("compiler-plugin/testData/diagnostics/stationentry")
  @TestDataPath("$PROJECT_ROOT")
  public class Stationentry {
    @Test
    public void testAllFilesPresentInStationentry() {
      KtTestUtil.assertAllTestsPresentByMetadataWithExcluded(this.getClass(), new File("compiler-plugin/testData/diagnostics/stationentry"), Pattern.compile("^(.+)\\.kt$"), null, TargetBackend.JVM_IR, true);
    }

    @Test
    @TestMetadata("OnlyClassIsAllowed.kt")
    public void testOnlyClassIsAllowed() {
      runTest("compiler-plugin/testData/diagnostics/stationentry/OnlyClassIsAllowed.kt");
    }
  }
}
